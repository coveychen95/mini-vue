{"version":3,"file":"mini-vue.esm.js","sources":["../src/shared/shapeFlag.ts","../src/runtime-core/createVNode.ts","../src/runtime-core/h.ts","../src/runtime-core/component.ts","../src/runtime-core/render-api/index.ts","../src/runtime-core/renderer.ts","../src/runtime-core/createApp.ts"],"sourcesContent":["// 组件的类型\nexport const enum ShapeFlags {\n  // 最后要渲染的 element 类型\n  ELEMENT = 1,\n  // 组件类型\n  STATEFUL_COMPONENT = 1 << 2,\n  // vnode 的 children 为 string 类型\n  TEXT_CHILDREN = 1 << 3,\n  // vnode 的 children 为数组类型\n  ARRAY_CHILDREN = 1 << 4,\n}","import { ShapeFlags } from \"../shared\";\n\nexport function createVNode(\n  type: any,\n  props?: any,\n  children?: string | Array<any>\n) {\n  const vnode = {\n    el: null,\n    component: null,\n    type,\n    props,\n    children,\n    shapeFlag: getShapeFlag(type)\n  }\n\n  // 基于 children 再次设置 shapeFlag\n  if (Array.isArray(children)) {\n    vnode.shapeFlag |= ShapeFlags.ARRAY_CHILDREN\n  } else if (typeof children === 'string'){\n    vnode.shapeFlag |= ShapeFlags.TEXT_CHILDREN\n  }\n  \n  return vnode\n}\n\nfunction getShapeFlag(type: any) {\n  return  typeof type === \"string\"\n    ? ShapeFlags.ELEMENT\n    : ShapeFlags.STATEFUL_COMPONENT\n}","import { createVNode } from './createVNode'\n\nexport function h(\n  type: string,\n  props: any,\n  children: string | Array<any>\n) {\n  return createVNode(type, props, children)\n}\n","export function createComponentInstance(vnode) {\n  const instance = {\n    type: vnode.type,\n    vnode,\n    props: {},\n    proxy: null,\n  }\n\n  return instance\n}","// TODO:\n// 源码里面这些接口是由 runtime-dom 来实现\n// 这里先简单实现\n// 后面也修改成和源码一样的实现\n\nexport function hostCreateElement(type) {\n  console.log(\"hostCreateElement: \", type);\n  const element = document.createElement(type);\n  return element;\n}\n\nexport function hostSetElementText(el, text) {\n  console.log('hostSetElementText: ', el, text)\n  el.innerText = text\n}\n\nexport function hostPatchProp(el, key, prevValue, nextValue) {\n  // preValue 之前的值\n  // 为了之后 update 做准备的值\n  // nextValue 当前的值\n  console.log(`hostPatchProp 设置属性:${key} 值:${nextValue}`);\n\n  switch(key) {\n    case 'tId':\n      el.setAttribute(key, nextValue)\n  }\n}\n\nexport function hostInsert(el, container) {\n  console.log('hostInsert: ');\n  container.append(el)\n}\n\n","import { h } from '.'\nimport { ShapeFlags } from '../shared'\nimport { createComponentInstance } from './component'\nimport {\n  hostCreateElement,\n  hostSetElementText,\n  hostPatchProp,\n  hostInsert,\n} from './render-api'\n\nexport function render(vnode, container) {\n  console.log('调用 patch')\n  patch(null, vnode, container)\n}\n\nfunction patch(n1, n2, container) {\n  // 基于 n2 的类型判断\n  // 因为 n2 是新的 vnode\n  const { type, shapeFlag } = n2\n  switch(type) {\n    case 'text':\n      // TODO:\n      // ...\n      break\n    // 其中还有几个类型比如： static fragment comment\n    default:\n      // 这里基于 shapeFlag 处理\n      if (shapeFlag & ShapeFlags.ELEMENT) {\n        console.log('处理 element')\n        processElement(n1, n2, container);\n      } else if (shapeFlag & ShapeFlags.STATEFUL_COMPONENT) {\n        console.log('处理 component');\n        processComponent(n1, n2, container);\n      }\n  }\n}\n\nfunction processElement(n1, n2, container) {\n  if (!n1) {\n    mountElement(n2, container)\n  } else {\n    // TODO:\n    // updateElement()\n  }\n}\n\n\nfunction mountElement(vnode, container) {\n  const { shapeFlag, props } = vnode\n  // 1.先创建 element\n  // 基于可拓展的渲染 api\n  const el = (vnode.el = hostCreateElement(vnode.type))\n  // 支持单子组件和多子组件的创建\n  if (shapeFlag & ShapeFlags.TEXT_CHILDREN) {\n    // 举个例子\n    // render() {\n    //   return h('div', {}, 'text')\n    // }\n    // 这里的 children 就是 text ，直接渲染即可\n    console.log(`处理文本:${vnode.children}`)\n    hostSetElementText(el, vnode.children)\n  } else if (shapeFlag & ShapeFlags.ARRAY_CHILDREN) {\n    // 举个例子\n    // render() {\n    //   return h('div', {}, [h(\"p\"),h(Hello)])\n    // }\n    // 这里 children 就是个数组了，就需要依次调用 patch 递归来处理\n    mountChildren(vnode.children, el);\n  }\n\n  // 处理 props\n  if (props) {\n    for (const key in props) {\n      // TODO:\n      // 需要过滤掉 vue 自身使用的 key\n      // 比如生命周期的 key：beforeMount mounted\n      const nextVal = props[key]\n      hostPatchProp(el, key, null, nextVal);\n    }\n  }\n\n  // todo\n  // 触发 beforeMount() 钩子\n  console.log(\"vnodeHook  -> onVnodeBeforeMount\");\n  console.log(\"DirectiveHook  -> beforeMount\");\n  console.log(\"transition  -> beforeEnter\");\n\n  // 插入\n  hostInsert(el, container);\n\n  // todo\n  // 触发 mounted() 钩子\n  console.log(\"vnodeHook  -> onVnodeMounted\");\n  console.log(\"DirectiveHook  -> mounted\");\n  console.log(\"transition  -> enter\");\n}\n\nfunction mountChildren (children, container) {\n  children.forEach(VNodeChild => {\n    // TODO:\n    // 这里应该处理一下 vnodeChild\n    // 因为有可能不是 vnode 类型\n    console.log('mountChildren: ', VNodeChild)\n    patch(null, VNodeChild, container)\n  });\n}\n\n\n\nfunction processComponent(n1, n2, container) {\n  // 如果 n1 没有值，那就是 mount \n  if (!n1) {\n    // 初始化 component\n    mountComponent(n2, container)\n  } else {\n    // TODO:\n    // updateComponent\n  }\n}\n\nfunction mountComponent(initialVNode, container) {\n  // 1. 先创建一个 component instance\n  const instance = (initialVNode.component = createComponentInstance(initialVNode))\n  console.log(`创建组件实例：${instance.type.name}`)\n  // 2. 给 instance 加工加工\n  setupComponent(instance)\n  setupRenderEffect(instance, container)\n}\n\nfunction setupComponent(instance) {\n  // 1. 处理 props\n  initProps()\n  // 2. 处理 slots\n  initSlots()\n\n  // 源码里面有两种类型的 component\n  // 一种是基于 options 创建的\n  // 还有一种是 function 的\n  // 这里处理的是 options 创建的\n  // 叫做 stateful 类型\n  setupStatefulComponent(instance);\n}\nfunction initProps() {\n  // TODO:\n  console.log('initProps')\n}\n\nfunction initSlots() {\n  // TODO:\n  console.log('initSlots')\n}\n\nfunction setupStatefulComponent(instance) {\n  // TODO:\n  // 1. 先创建代理 proxy\n  console.log('创建 proxy')\n  // 2. 调用 setup\n  // TODO:\n  // 应传入 props 和 setupContext\n  const setupResult = instance.setup && instance.setup(instance.props)\n\n  // 3. 处理 setupResults\n  handleSetupResult(instance, setupResult)\n}\n\nfunction handleSetupResult(instance, setupResult){\n  // setup 返回的值不一样会有不同的处理\n  // 1. 看看 setupResult 是个什么\n  if (typeof setupResult === 'function') {\n    // 如果返回的是 function 的话，那么绑定到 render 上\n    // 认为是 render 逻辑\n    // setup () {return h('div', {}, 'text')}\n    instance.render = setupResult\n  } else if (typeof setupResult === 'object') {\n    instance.setupState = setupResult\n  }\n\n  finishComponentSetup(instance)\n}\n\nfunction finishComponentSetup(instance) {\n  // 给 instance 设置 render\n  // 先取到用户设置的 component options\n  const Component = instance.type\n\n  if (!instance.render) {\n    // TODO:\n    // 调用 compile 模块来编译 template\n  }\n  instance.render = Component.render\n\n  // applyOptions\n}\n\nfunction applyOptions() {\n  // 兼容 vue2.x\n  // TODO:\n}\n\nfunction setupRenderEffect(instance, container) {\n  // 源码里面是直接调用了 reactivity\n  // 因为这次只做初始化逻辑\n  // 所以暂时用不到\n  // 后面这里是作为 update 的主要逻辑\n\n  // 调用 render\n  // 应该传入 ctx 也就是 proxy\n  // ctx 可以选择暴露给用户的 api\n  // 源代码里面是调用的 renderComponentRoot 函数\n  // 这里为了简化直接调用 render\n  console.log(\"调用 render,获取 subTree\");\n  const subTree = instance.render(instance.proxy)\n  console.log(`subtree:`, subTree)\n\n  // TODO:\n  console.log(`${instance.type.name}:触发 beforeMount hook`);\n  console.log(`${instance.type.name}:触发 onVnodeBeforeMount hook`);\n\n  // 这里基于 subTree 再次调用 patch\n  // 基于 render 返回的 vnode ，再次进行渲染\n  // 这里我把这个行为隐喻成开箱\n  // 一个组件就是一个箱子\n  // 里面有可能是 element （也就是可以直接渲染的）\n  // 也有可能还是 component\n  // 这里就是递归的开箱\n  // 而 subTree 就是当前的这个箱子（组件）装的东西\n  // 箱子（组件）只是个概念，它实际是不需要渲染的\n  // 要渲染的是箱子里面的 subTree\n  patch(null, subTree, container);\n\n  console.log(`${instance.type.name}:触发 mounted hook`);\n\n}\n","import { render } from './renderer'\nimport { createVNode } from './createVNode'\n\n// TODO:\n// createApp\n// 在 vue3 里面 createApp 是属于 renderer 对象的\n// 而 renderer 对象需要创建\n// 这里我们暂时不实现\n\nexport const createApp = (rootComponent) => {\n  const app = {\n    _component: rootComponent,\n    _container: null,\n    mount(rootContainer) {\n      console.log('基于根组件创建 vnode')\n      const vnode = createVNode(rootComponent);\n      app._container = rootContainer\n      console.log('调用 render , 基于 vnode 进行开箱')\n      render(vnode, rootContainer)\n      return app\n    }\n  }\n\n  return app\n}"],"names":[],"mappings":"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"}